@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Width = Unit.Percentage(100);
        settings.Name = "ActivityGridView";
        settings.CallbackRouteValues = new { Controller = "FileManagement", Action = "ActivityGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "FileManagement", Action = "ActivityGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "FileManagement", Action = "ActivityGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "FileManagement", Action = "ActivityGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "Id";
        settings.ClientSideEvents.SelectionChanged = "function(s,e){GridSelectionChanged(s,e);}";
        settings.ClientSideEvents.Init = "function(s,e){GridSelectionChanged(s,e);}";
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.InitToolbarSettings();
        settings.Toolbars.Add(tb =>
        {
            tb.Enabled = true;
            tb.Position = GridToolbarPosition.Top;


            tb.Items.Add(GridViewToolbarCommand.New);
            tb.Items.Add(GridViewToolbarCommand.Edit);
            tb.Items.Add(GridViewToolbarCommand.Delete);
            tb.Items.Add(i =>
            {
                i.Command = GridViewToolbarCommand.Refresh;
                i.BeginGroup = true;
                i.AdaptivePriority = 1;
            });
            tb.Items.Add(content =>
            {
                content.SetTemplateContent(coln =>
                {
                    Html.DevExpress().Button(btnSettings =>
                    {
                        btnSettings.Name = "btnPrint";
                        btnSettings.ClientSideEvents.Click = "function(s,e){Send()}";
                        btnSettings.Text = "Send";
                        btnSettings.ClientEnabled = false;
                        //if (DataBinder.Eval(content.DataItem, "Id") == null)
                        //    btnSettings.ClientEnabled = false;
                    }).GetHtml();
                });

            });
        });


        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add("ActivityId");
        settings.Columns.Add("Subject");
        settings.Columns.Add("ActivityDate");
        settings.Columns.Add("Description");
        settings.Columns.Add(col =>
        {
            col.FieldName = "IsSend";
            col.ColumnType = MVCxGridViewColumnType.CheckBox;
        });
        settings.SetEditFormTemplateContent(col =>
        {
            Html.DevExpress().PopupControl(pop =>
            {
                pop.HeaderText = DataBinder.Eval(col.DataItem, "ActivityId")?.ToString() ?? "New Activity";
                pop.Width = Unit.Pixel(700);
                pop.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
                pop.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
                pop.Name = col.KeyValue + "_popup";
                pop.Modal = true;
                pop.ShowOnPageLoad = true;
                pop.CloseOnEscape = false;
                pop.ShowCloseButton = true;
                pop.ClientSideEvents.CloseUp = "function(s,e){ActivityGridView.CancelEdit()}";
                pop.CloseAction = CloseAction.CloseButton;
                pop.SetContent(() =>
                {
                    var id = col.KeyValue;
                    Html.RenderAction("AddEditActivityPartial", new { activityId = id });
                });
            }).GetHtml();




        });
    });
    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()