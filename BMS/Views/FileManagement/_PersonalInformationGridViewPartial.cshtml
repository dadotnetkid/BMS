@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "PersonalInformationGridView";
        settings.CallbackRouteValues = new { Controller = "FileManagement", Action = "PersonalInformationGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "FileManagement", Action = "PersonalInformationGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "FileManagement", Action = "PersonalInformationGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "FileManagement", Action = "PersonalInformationGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.AddAddEditDeleteToolbar();


        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
        settings.Columns.Add(col =>
        {
            col.FieldName = "FullName";
            col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            var cbo = col.PropertiesEdit as ComboBoxProperties;
            cbo.DataSource = (Model as List<PersonalInformations>)?.GroupBy(x => x.FullName).Select(x => new { FullName = x.Key });
            cbo.TextField = "FullName";
        });

        settings.Columns.Add("ContactNumber");
        settings.Columns.Add("AddressLine1");
        settings.Columns.Add("AddressLine2");
        settings.Columns.Add("BirthPlace");
        settings.Columns.Add(col =>
        {
            col.FieldName = "Birthdate";
            col.PropertiesEdit.DisplayFormatString = "MM/dd/yyyy";
        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "Sex";
            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            var cbo = col.PropertiesEdit as ComboBoxProperties;
            cbo.DataSource = new string[] { "Male", "Female" }.Select(x => new { Sex = x });
            cbo.TextField = "Sex";

        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "CivilStatus";
            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            var cbo = col.PropertiesEdit as ComboBoxProperties;
            cbo.DataSource = (Model as List<PersonalInformations>)?.GroupBy(x => x.CivilStatus).Select(x => new { CivilStatus = x.Key });
            cbo.TextField = "CivilStatus";

        });
        settings.Columns.Add(col =>
        {
            col.FieldName = "Citizenship";
            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            var cbo = col.PropertiesEdit as ComboBoxProperties;
            cbo.DataSource = (Model as List<PersonalInformations>)?.GroupBy(x => x.Citizenship).Select(x => new { Citizenship = x.Key });
            cbo.TextField = "Citizenship";

        });
        settings.SetEditFormTemplateContent(col =>
        {
            Html.DevExpress().PopupControl(pop =>
            {
                pop.HeaderText = DataBinder.Eval(col.DataItem, "FullName")?.ToString() ?? "New Personal Information";
                pop.Width = Unit.Pixel(700);
                pop.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
                pop.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
                pop.Name = col.KeyValue + "_popup";
                pop.Modal = true;
                pop.ShowOnPageLoad = true;
                pop.CloseOnEscape = false;
                pop.ShowCloseButton = true;
                pop.ShowMaximizeButton = true;
                pop.ClientSideEvents.CloseUp = "function(s,e){PersonalInformationGridView.CancelEdit()}";
                pop.CloseAction = CloseAction.CloseButton;
                pop.SetContent(() =>
                {
                    var id = col.KeyValue;
                    Html.RenderAction("AddEditPersonalInformationPartial", new { personalInformationId = id });
                });
            }).GetHtml();




        });
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()